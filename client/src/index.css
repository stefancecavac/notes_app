@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wdth,wght@0,75..100,300..800;1,75..100,300..800&display=swap')
layer(base);

@import 'tailwindcss';

@plugin '@tailwindcss/typography';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
  --font-sans: Open Sans, sans;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

.tiptap ul p,
.tiptap ol p {
  @apply flex inline;
}

.tiptap label {
  @apply text-black;
}

.tiptap input[type="checkbox"] {
  @apply flex items-center hover:cursor-pointer w-4 h-4 rounded-sm bg-black;
}

::-webkit-scrollbar {
  @apply w-1;
}

::-webkit-scrollbar-track {
  @apply bg-gray-200 rounded-lg;
}

::-webkit-scrollbar-thumb {
  @apply bg-neutral-400 rounded-lg;
}

/* modal animations */
.scale-up-center {
  -webkit-animation: scale-up-center 0.2s cubic-bezier(0.39, 0.575, 0.565, 1) both;
  animation: scale-up-center 0.2s cubic-bezier(0.39, 0.575, 0.565, 1) both;
}

@-webkit-keyframes scale-up-center {
  0% {
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@keyframes scale-up-center {
  0% {
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

/* menu animation */
.slide-bottom {
  -webkit-animation: slide-bottom 0.3s cubic-bezier(0.25, 0.52, 0.82, 0.94) both;
  animation: slide-bottom 0.3s cubic-bezier(0.25, 0.52, 0.82, 0.94) both;
}

@-webkit-keyframes slide-bottom {
  0% {
    -webkit-transform: translateY(-20px);
    transform: translate10(-20px);
  }
  100% {
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}
@keyframes slide-bottom {
  0% {
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px);
  }
  100% {
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

.slide-right {
  -webkit-animation: slide-right 0.5s ease-out both;
  animation: slide-right 0.5s ease-out both;
}

@-webkit-keyframes slide-right {
  0% {
    -webkit-transform: translateX(-100);
    transform: translateX(-100);
  }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(o);
  }
}
@keyframes slide-right {
  0% {
    -webkit-transform: translateX(-100);
    transform: translateX(-100);
  }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }
}

/* slide top */
.slide-top {
  -webkit-animation: slide-top 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  animation: slide-top 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@-webkit-keyframes slide-top {
  0% {
    -webkit-transform: translateY(100px);
    transform: translateY(100px);
  }
  100% {
    -webkit-transform: translateY(50px);
    transform: translateY(50px);
  }
}
@keyframes slide-top {
  0% {
    -webkit-transform: translateY(100px);
    transform: translateY(100px);
  }
  100% {
    -webkit-transform: translateY(-2 0px);
    transform: translateY(-20px);
  }
}
