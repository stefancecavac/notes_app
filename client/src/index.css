@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wdth,wght@0,75..100,300..800;1,75..100,300..800&display=swap") layer(base);

@import "tailwindcss";

/* @plugin '@tailwindcss/typography'; */


@plugin "daisyui" {
  themes: light --default, dark;
}

@theme {
  --font-sans: Open Sans, sans;
}

@plugin "daisyui/theme" {
  name: "light";
  default: true;
  --color-base-100: #ffffff;
  --color-base-200: oklch(0.97 0.001 106.424);
  --color-base-300: oklch(0.923 0.003 48.717); /* Slightly darker for elements */
  --color-base-content: #5f5e5b; 

  --color-primary: red
  --color-primary-content: oklch(98% 0.01 240); /* Light text for primary elements */

  --color-secondary: oklch(70% 0.15 210); /* Soft purple-blue for secondary */
  --color-secondary-content: oklch(98% 0.01 210); /* Light text for secondary elements */

  --color-accent: oklch(60% 0.2 140); /* Greenish for accents */
  --color-accent-content: oklch(98% 0.01 140); /* Light text for accent elements */

  --color-neutral: #d0d0cf; /* Light neutral background */
  --color-neutral-content: oklch(10% 0.05 240); /* Dark text for neutral elements */

  --color-info: oklch(80% 0.1 220); /* Soft blue for info */
  --color-info-content: #8f8d89; /* Light text for info elements */
  --color-success: oklch(75.07% 0.2155 144.88); /* Soft green for success */
  --color-success-content: oklch(98% 0.01 130); /* Light text for success elements */
  --color-warning: oklch(90% 0.1 50); /* Subtle yellow for warning */
  --color-warning-content: oklch(20% 0.05 50); /* Darker text for warning */
  --color-error: oklch(70% 0.2 30); /* Light red for error */
  --color-error-content: oklch(98% 0.01 30); /* Light text for error elements */
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/

.tiptap ul p,
.tiptap ol p {
  @apply flex inline;
}

.tiptap label {
  @apply text-black;
}

.tiptap input[type="checkbox"] {
  @apply flex items-center hover:cursor-pointer w-4 h-4 rounded-sm bg-black;
}

::-webkit-scrollbar {
  @apply w-1;
}

::-webkit-scrollbar-track {
  @apply bg-gray-200 rounded-lg;
}

::-webkit-scrollbar-thumb {
  @apply bg-neutral-400 rounded-lg;
}




/* animations */

.scale-up-center {
	-webkit-animation: scale-up-center 0.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
	        animation: scale-up-center 0.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
}



@-webkit-keyframes scale-up-center {
  0% {
    -webkit-transform: scale(0.5);
            transform: scale(0.5);
  }
  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}
@keyframes scale-up-center {
  0% {
    -webkit-transform: scale(0.5);
            transform: scale(0.5);
  }
  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

.slide-in-bottom {
	-webkit-animation: slide-in-bottom 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	        animation: slide-in-bottom 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}



@-webkit-keyframes slide-in-bottom {
  0% {
    -webkit-transform: translateY(1000px);
            transform: translateY(1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slide-in-bottom {
  0% {
    -webkit-transform: translateY(1000px);
            transform: translateY(1000px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }
}
